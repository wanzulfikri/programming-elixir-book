defmodule Calc do
  def sum(0), do: 0
  def sum(n), do: n + sum(n - 1)

  def gcd(x, 0), do: x
  def gcd(x, y), do: gcd(y, rem(x, y))

  def guess(actual, range \\ 1..1000) when is_map(range) and is_integer(actual) do
    first..last = range
    IO.puts("#{first}, #{last}")
    rawGuess = div(last-first,2)
    guess = if 1 == rem(div(rawGuess,2), 2), do: rawGuess + 1, else: rawGuess
    IO.puts("Is it #{guess}?")
    if guess == actual, do: IO.puts(guess)
    if guess > actual, do: guess(actual, first..guess)
    if guess < actual, do: guess(actual, guess..last)
  end

  def getGuessNum(range) do
    _first..last = range
    count = Enum.count(range)
    last - div(count,2) 
  end

  def guess2(actual, range \\ 1..1000) when is_map(range) and is_integer(actual) do
	guessNum = getGuessNum(range)
	first..last = range
	IO.puts("Is it #{guessNum}?")
        if guessNum == actual, do: IO.puts(guessNum)
        if guessNum > actual, do: guess2(actual, first..guessNum)
        if guessNum < actual, do: guess2(actual, guessNum..last)
  end
end
